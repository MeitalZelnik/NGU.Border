//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IISHostTest.ReqService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NotifyPropertyChangedBase", Namespace="http://schemas.datacontract.org/2004/07/Pangea.BaseStructures")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IISHostTest.ReqService.ObjectValidationBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IISHostTest.ReqService.Person))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IISHostTest.ReqService.RequestReason))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IISHostTest.ReqService.MultiLanguage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IISHostTest.ReqService.RequestStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IISHostTest.ReqService.RequestType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IISHostTest.ReqService.Request))]
    public partial class NotifyPropertyChangedBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ObjectValidationBase", Namespace="http://schemas.datacontract.org/2004/07/Pangea.BaseStructures")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IISHostTest.ReqService.Person))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IISHostTest.ReqService.RequestReason))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IISHostTest.ReqService.MultiLanguage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IISHostTest.ReqService.RequestStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IISHostTest.ReqService.RequestType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IISHostTest.ReqService.Request))]
    public partial class ObjectValidationBase : IISHostTest.ReqService.NotifyPropertyChangedBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Person", Namespace="http://schemas.datacontract.org/2004/07/NGU.Core")]
    [System.SerializableAttribute()]
    public partial class Person : IISHostTest.ReqService.ObjectValidationBase {
        
        private System.Nullable<System.DateTime> birthDateField;
        
        private System.Nullable<System.DateTime> createDateField;
        
        private int createUserIDField;
        
        private string firstNameField;
        
        private System.Nullable<int> genderIDField;
        
        private int iDField;
        
        private string lastNameField;
        
        private string middleNameField;
        
        private System.Nullable<int> nationalityIDField;
        
        private int statusIDField;
        
        private System.Nullable<System.DateTime> updateDateField;
        
        private int updateUserIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<System.DateTime> birthDate {
            get {
                return this.birthDateField;
            }
            set {
                if ((this.birthDateField.Equals(value) != true)) {
                    this.birthDateField = value;
                    this.RaisePropertyChanged("birthDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<System.DateTime> createDate {
            get {
                return this.createDateField;
            }
            set {
                if ((this.createDateField.Equals(value) != true)) {
                    this.createDateField = value;
                    this.RaisePropertyChanged("createDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int createUserID {
            get {
                return this.createUserIDField;
            }
            set {
                if ((this.createUserIDField.Equals(value) != true)) {
                    this.createUserIDField = value;
                    this.RaisePropertyChanged("createUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.firstNameField, value) != true)) {
                    this.firstNameField = value;
                    this.RaisePropertyChanged("firstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> genderID {
            get {
                return this.genderIDField;
            }
            set {
                if ((this.genderIDField.Equals(value) != true)) {
                    this.genderIDField = value;
                    this.RaisePropertyChanged("genderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int iD {
            get {
                return this.iDField;
            }
            set {
                if ((this.iDField.Equals(value) != true)) {
                    this.iDField = value;
                    this.RaisePropertyChanged("iD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.lastNameField, value) != true)) {
                    this.lastNameField = value;
                    this.RaisePropertyChanged("lastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string middleName {
            get {
                return this.middleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.middleNameField, value) != true)) {
                    this.middleNameField = value;
                    this.RaisePropertyChanged("middleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> nationalityID {
            get {
                return this.nationalityIDField;
            }
            set {
                if ((this.nationalityIDField.Equals(value) != true)) {
                    this.nationalityIDField = value;
                    this.RaisePropertyChanged("nationalityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int statusID {
            get {
                return this.statusIDField;
            }
            set {
                if ((this.statusIDField.Equals(value) != true)) {
                    this.statusIDField = value;
                    this.RaisePropertyChanged("statusID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<System.DateTime> updateDate {
            get {
                return this.updateDateField;
            }
            set {
                if ((this.updateDateField.Equals(value) != true)) {
                    this.updateDateField = value;
                    this.RaisePropertyChanged("updateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int updateUserID {
            get {
                return this.updateUserIDField;
            }
            set {
                if ((this.updateUserIDField.Equals(value) != true)) {
                    this.updateUserIDField = value;
                    this.RaisePropertyChanged("updateUserID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestReason", Namespace="http://schemas.datacontract.org/2004/07/NGU.Core")]
    [System.SerializableAttribute()]
    public partial class RequestReason : IISHostTest.ReqService.ObjectValidationBase {
        
        private string codeField;
        
        private string descriptionField;
        
        private int iDField;
        
        private System.Nullable<bool> isActiveRecordField;
        
        private string nameField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string code {
            get {
                return this.codeField;
            }
            set {
                if ((object.ReferenceEquals(this.codeField, value) != true)) {
                    this.codeField = value;
                    this.RaisePropertyChanged("code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int iD {
            get {
                return this.iDField;
            }
            set {
                if ((this.iDField.Equals(value) != true)) {
                    this.iDField = value;
                    this.RaisePropertyChanged("iD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<bool> isActiveRecord {
            get {
                return this.isActiveRecordField;
            }
            set {
                if ((this.isActiveRecordField.Equals(value) != true)) {
                    this.isActiveRecordField = value;
                    this.RaisePropertyChanged("isActiveRecord");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiLanguage", Namespace="http://schemas.datacontract.org/2004/07/Pangea.BaseStructures")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IISHostTest.ReqService.RequestStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IISHostTest.ReqService.RequestType))]
    public partial class MultiLanguage : IISHostTest.ReqService.ObjectValidationBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionMLCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionTranslatedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionMLCode {
            get {
                return this.DescriptionMLCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionMLCodeField, value) != true)) {
                    this.DescriptionMLCodeField = value;
                    this.RaisePropertyChanged("DescriptionMLCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionTranslated {
            get {
                return this.DescriptionTranslatedField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionTranslatedField, value) != true)) {
                    this.DescriptionTranslatedField = value;
                    this.RaisePropertyChanged("DescriptionTranslated");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestStatus", Namespace="http://schemas.datacontract.org/2004/07/NGU.Core")]
    [System.SerializableAttribute()]
    public partial class RequestStatus : IISHostTest.ReqService.MultiLanguage {
        
        private System.Nullable<bool> activeRecordFlagField;
        
        private string codeField;
        
        private int iDField;
        
        private System.Nullable<bool> inProcessFlagField;
        
        private string internalRemarksField;
        
        private string nameField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<bool> activeRecordFlag {
            get {
                return this.activeRecordFlagField;
            }
            set {
                if ((this.activeRecordFlagField.Equals(value) != true)) {
                    this.activeRecordFlagField = value;
                    this.RaisePropertyChanged("activeRecordFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string code {
            get {
                return this.codeField;
            }
            set {
                if ((object.ReferenceEquals(this.codeField, value) != true)) {
                    this.codeField = value;
                    this.RaisePropertyChanged("code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int iD {
            get {
                return this.iDField;
            }
            set {
                if ((this.iDField.Equals(value) != true)) {
                    this.iDField = value;
                    this.RaisePropertyChanged("iD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<bool> inProcessFlag {
            get {
                return this.inProcessFlagField;
            }
            set {
                if ((this.inProcessFlagField.Equals(value) != true)) {
                    this.inProcessFlagField = value;
                    this.RaisePropertyChanged("inProcessFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string internalRemarks {
            get {
                return this.internalRemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.internalRemarksField, value) != true)) {
                    this.internalRemarksField = value;
                    this.RaisePropertyChanged("internalRemarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestType", Namespace="http://schemas.datacontract.org/2004/07/NGU.Core")]
    [System.SerializableAttribute()]
    public partial class RequestType : IISHostTest.ReqService.MultiLanguage {
        
        private System.Nullable<bool> activeRecordFlagField;
        
        private string codeField;
        
        private int iDField;
        
        private string nameField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<bool> activeRecordFlag {
            get {
                return this.activeRecordFlagField;
            }
            set {
                if ((this.activeRecordFlagField.Equals(value) != true)) {
                    this.activeRecordFlagField = value;
                    this.RaisePropertyChanged("activeRecordFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string code {
            get {
                return this.codeField;
            }
            set {
                if ((object.ReferenceEquals(this.codeField, value) != true)) {
                    this.codeField = value;
                    this.RaisePropertyChanged("code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int iD {
            get {
                return this.iDField;
            }
            set {
                if ((this.iDField.Equals(value) != true)) {
                    this.iDField = value;
                    this.RaisePropertyChanged("iD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Request", Namespace="http://schemas.datacontract.org/2004/07/NGU.Core")]
    [System.SerializableAttribute()]
    public partial class Request : IISHostTest.ReqService.ObjectValidationBase {
        
        private System.Nullable<System.DateTime> birthDateField;
        
        private System.Nullable<System.DateTime> createDateField;
        
        private int createUserIDField;
        
        private string docCodeField;
        
        private System.Nullable<System.DateTime> docExpirationDateField;
        
        private string docNationalityIDField;
        
        private string firstNameField;
        
        private System.Nullable<int> genderIDField;
        
        private int iDField;
        
        private System.Nullable<int> idenCountryIDField;
        
        private string idenNumField;
        
        private int idenTypeIDField;
        
        private System.Nullable<bool> isMatch1ToManyResField;
        
        private System.Nullable<bool> isMatch1ToOneResField;
        
        private System.Nullable<bool> isMatchTextDataResField;
        
        private string lastNameField;
        
        private string middleNameField;
        
        private string numField;
        
        private IISHostTest.ReqService.Person personField;
        
        private int priorityIDField;
        
        private string remarksField;
        
        private IISHostTest.ReqService.RequestReason requestReasonField;
        
        private IISHostTest.ReqService.RequestStatus requestStatusField;
        
        private IISHostTest.ReqService.RequestType requestSubTypeField;
        
        private IISHostTest.ReqService.RequestType requestTypeField;
        
        private int siteIDField;
        
        private System.Nullable<System.DateTime> statusDateField;
        
        private System.Nullable<System.DateTime> updateDateField;
        
        private int updateUserIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<System.DateTime> birthDate {
            get {
                return this.birthDateField;
            }
            set {
                if ((this.birthDateField.Equals(value) != true)) {
                    this.birthDateField = value;
                    this.RaisePropertyChanged("birthDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<System.DateTime> createDate {
            get {
                return this.createDateField;
            }
            set {
                if ((this.createDateField.Equals(value) != true)) {
                    this.createDateField = value;
                    this.RaisePropertyChanged("createDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int createUserID {
            get {
                return this.createUserIDField;
            }
            set {
                if ((this.createUserIDField.Equals(value) != true)) {
                    this.createUserIDField = value;
                    this.RaisePropertyChanged("createUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string docCode {
            get {
                return this.docCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.docCodeField, value) != true)) {
                    this.docCodeField = value;
                    this.RaisePropertyChanged("docCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<System.DateTime> docExpirationDate {
            get {
                return this.docExpirationDateField;
            }
            set {
                if ((this.docExpirationDateField.Equals(value) != true)) {
                    this.docExpirationDateField = value;
                    this.RaisePropertyChanged("docExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string docNationalityID {
            get {
                return this.docNationalityIDField;
            }
            set {
                if ((object.ReferenceEquals(this.docNationalityIDField, value) != true)) {
                    this.docNationalityIDField = value;
                    this.RaisePropertyChanged("docNationalityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.firstNameField, value) != true)) {
                    this.firstNameField = value;
                    this.RaisePropertyChanged("firstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> genderID {
            get {
                return this.genderIDField;
            }
            set {
                if ((this.genderIDField.Equals(value) != true)) {
                    this.genderIDField = value;
                    this.RaisePropertyChanged("genderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int iD {
            get {
                return this.iDField;
            }
            set {
                if ((this.iDField.Equals(value) != true)) {
                    this.iDField = value;
                    this.RaisePropertyChanged("iD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> idenCountryID {
            get {
                return this.idenCountryIDField;
            }
            set {
                if ((this.idenCountryIDField.Equals(value) != true)) {
                    this.idenCountryIDField = value;
                    this.RaisePropertyChanged("idenCountryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string idenNum {
            get {
                return this.idenNumField;
            }
            set {
                if ((object.ReferenceEquals(this.idenNumField, value) != true)) {
                    this.idenNumField = value;
                    this.RaisePropertyChanged("idenNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int idenTypeID {
            get {
                return this.idenTypeIDField;
            }
            set {
                if ((this.idenTypeIDField.Equals(value) != true)) {
                    this.idenTypeIDField = value;
                    this.RaisePropertyChanged("idenTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<bool> isMatch1ToManyRes {
            get {
                return this.isMatch1ToManyResField;
            }
            set {
                if ((this.isMatch1ToManyResField.Equals(value) != true)) {
                    this.isMatch1ToManyResField = value;
                    this.RaisePropertyChanged("isMatch1ToManyRes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<bool> isMatch1ToOneRes {
            get {
                return this.isMatch1ToOneResField;
            }
            set {
                if ((this.isMatch1ToOneResField.Equals(value) != true)) {
                    this.isMatch1ToOneResField = value;
                    this.RaisePropertyChanged("isMatch1ToOneRes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<bool> isMatchTextDataRes {
            get {
                return this.isMatchTextDataResField;
            }
            set {
                if ((this.isMatchTextDataResField.Equals(value) != true)) {
                    this.isMatchTextDataResField = value;
                    this.RaisePropertyChanged("isMatchTextDataRes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.lastNameField, value) != true)) {
                    this.lastNameField = value;
                    this.RaisePropertyChanged("lastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string middleName {
            get {
                return this.middleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.middleNameField, value) != true)) {
                    this.middleNameField = value;
                    this.RaisePropertyChanged("middleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string num {
            get {
                return this.numField;
            }
            set {
                if ((object.ReferenceEquals(this.numField, value) != true)) {
                    this.numField = value;
                    this.RaisePropertyChanged("num");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public IISHostTest.ReqService.Person person {
            get {
                return this.personField;
            }
            set {
                if ((object.ReferenceEquals(this.personField, value) != true)) {
                    this.personField = value;
                    this.RaisePropertyChanged("person");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int priorityID {
            get {
                return this.priorityIDField;
            }
            set {
                if ((this.priorityIDField.Equals(value) != true)) {
                    this.priorityIDField = value;
                    this.RaisePropertyChanged("priorityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string remarks {
            get {
                return this.remarksField;
            }
            set {
                if ((object.ReferenceEquals(this.remarksField, value) != true)) {
                    this.remarksField = value;
                    this.RaisePropertyChanged("remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public IISHostTest.ReqService.RequestReason requestReason {
            get {
                return this.requestReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.requestReasonField, value) != true)) {
                    this.requestReasonField = value;
                    this.RaisePropertyChanged("requestReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public IISHostTest.ReqService.RequestStatus requestStatus {
            get {
                return this.requestStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.requestStatusField, value) != true)) {
                    this.requestStatusField = value;
                    this.RaisePropertyChanged("requestStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public IISHostTest.ReqService.RequestType requestSubType {
            get {
                return this.requestSubTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.requestSubTypeField, value) != true)) {
                    this.requestSubTypeField = value;
                    this.RaisePropertyChanged("requestSubType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public IISHostTest.ReqService.RequestType requestType {
            get {
                return this.requestTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.requestTypeField, value) != true)) {
                    this.requestTypeField = value;
                    this.RaisePropertyChanged("requestType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int siteID {
            get {
                return this.siteIDField;
            }
            set {
                if ((this.siteIDField.Equals(value) != true)) {
                    this.siteIDField = value;
                    this.RaisePropertyChanged("siteID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<System.DateTime> statusDate {
            get {
                return this.statusDateField;
            }
            set {
                if ((this.statusDateField.Equals(value) != true)) {
                    this.statusDateField = value;
                    this.RaisePropertyChanged("statusDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<System.DateTime> updateDate {
            get {
                return this.updateDateField;
            }
            set {
                if ((this.updateDateField.Equals(value) != true)) {
                    this.updateDateField = value;
                    this.RaisePropertyChanged("updateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int updateUserID {
            get {
                return this.updateUserIDField;
            }
            set {
                if ((this.updateUserIDField.Equals(value) != true)) {
                    this.updateUserIDField = value;
                    this.RaisePropertyChanged("updateUserID");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestStatuses", Namespace="http://schemas.datacontract.org/2004/07/NGU.Enums")]
    public enum RequestStatuses : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Empty = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Open = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SentForProcessing = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Investigation = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Completed = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rejected = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Terminated = 6,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ReqService.IRequestService")]
    public interface IRequestService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/IsAlive", ReplyAction="http://tempuri.org/IBaseService/IsAliveResponse")]
        bool IsAlive();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/IsAlive", ReplyAction="http://tempuri.org/IBaseService/IsAliveResponse")]
        System.Threading.Tasks.Task<bool> IsAliveAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRequestService/GenerateRequestNum", ReplyAction="http://tempuri.org/IRequestService/GenerateRequestNumResponse")]
        string GenerateRequestNum();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRequestService/GenerateRequestNum", ReplyAction="http://tempuri.org/IRequestService/GenerateRequestNumResponse")]
        System.Threading.Tasks.Task<string> GenerateRequestNumAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRequestService/SaveRequest", ReplyAction="http://tempuri.org/IRequestService/SaveRequestResponse")]
        void SaveRequest(IISHostTest.ReqService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRequestService/SaveRequest", ReplyAction="http://tempuri.org/IRequestService/SaveRequestResponse")]
        System.Threading.Tasks.Task SaveRequestAsync(IISHostTest.ReqService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRequestService/GetRequestStatus", ReplyAction="http://tempuri.org/IRequestService/GetRequestStatusResponse")]
        IISHostTest.ReqService.RequestStatuses GetRequestStatus(string requestNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRequestService/GetRequestStatus", ReplyAction="http://tempuri.org/IRequestService/GetRequestStatusResponse")]
        System.Threading.Tasks.Task<IISHostTest.ReqService.RequestStatuses> GetRequestStatusAsync(string requestNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRequestService/SaveRequestStatus", ReplyAction="http://tempuri.org/IRequestService/SaveRequestStatusResponse")]
        bool SaveRequestStatus(string requestNum, IISHostTest.ReqService.RequestStatuses requestStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRequestService/SaveRequestStatus", ReplyAction="http://tempuri.org/IRequestService/SaveRequestStatusResponse")]
        System.Threading.Tasks.Task<bool> SaveRequestStatusAsync(string requestNum, IISHostTest.ReqService.RequestStatuses requestStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRequestService/GetRequestByDoc", ReplyAction="http://tempuri.org/IRequestService/GetRequestByDocResponse")]
        IISHostTest.ReqService.Request GetRequestByDoc(int docType, string docNumber, int docCountry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRequestService/GetRequestByDoc", ReplyAction="http://tempuri.org/IRequestService/GetRequestByDocResponse")]
        System.Threading.Tasks.Task<IISHostTest.ReqService.Request> GetRequestByDocAsync(int docType, string docNumber, int docCountry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRequestService/GetRequestByNum", ReplyAction="http://tempuri.org/IRequestService/GetRequestByNumResponse")]
        IISHostTest.ReqService.Request GetRequestByNum(string requestNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRequestService/GetRequestByNum", ReplyAction="http://tempuri.org/IRequestService/GetRequestByNumResponse")]
        System.Threading.Tasks.Task<IISHostTest.ReqService.Request> GetRequestByNumAsync(string requestNum);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRequestServiceChannel : IISHostTest.ReqService.IRequestService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RequestServiceClient : System.ServiceModel.ClientBase<IISHostTest.ReqService.IRequestService>, IISHostTest.ReqService.IRequestService {
        
        public RequestServiceClient() {
        }
        
        public RequestServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RequestServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RequestServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RequestServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool IsAlive() {
            return base.Channel.IsAlive();
        }
        
        public System.Threading.Tasks.Task<bool> IsAliveAsync() {
            return base.Channel.IsAliveAsync();
        }
        
        public string GenerateRequestNum() {
            return base.Channel.GenerateRequestNum();
        }
        
        public System.Threading.Tasks.Task<string> GenerateRequestNumAsync() {
            return base.Channel.GenerateRequestNumAsync();
        }
        
        public void SaveRequest(IISHostTest.ReqService.Request request) {
            base.Channel.SaveRequest(request);
        }
        
        public System.Threading.Tasks.Task SaveRequestAsync(IISHostTest.ReqService.Request request) {
            return base.Channel.SaveRequestAsync(request);
        }
        
        public IISHostTest.ReqService.RequestStatuses GetRequestStatus(string requestNum) {
            return base.Channel.GetRequestStatus(requestNum);
        }
        
        public System.Threading.Tasks.Task<IISHostTest.ReqService.RequestStatuses> GetRequestStatusAsync(string requestNum) {
            return base.Channel.GetRequestStatusAsync(requestNum);
        }
        
        public bool SaveRequestStatus(string requestNum, IISHostTest.ReqService.RequestStatuses requestStatus) {
            return base.Channel.SaveRequestStatus(requestNum, requestStatus);
        }
        
        public System.Threading.Tasks.Task<bool> SaveRequestStatusAsync(string requestNum, IISHostTest.ReqService.RequestStatuses requestStatus) {
            return base.Channel.SaveRequestStatusAsync(requestNum, requestStatus);
        }
        
        public IISHostTest.ReqService.Request GetRequestByDoc(int docType, string docNumber, int docCountry) {
            return base.Channel.GetRequestByDoc(docType, docNumber, docCountry);
        }
        
        public System.Threading.Tasks.Task<IISHostTest.ReqService.Request> GetRequestByDocAsync(int docType, string docNumber, int docCountry) {
            return base.Channel.GetRequestByDocAsync(docType, docNumber, docCountry);
        }
        
        public IISHostTest.ReqService.Request GetRequestByNum(string requestNum) {
            return base.Channel.GetRequestByNum(requestNum);
        }
        
        public System.Threading.Tasks.Task<IISHostTest.ReqService.Request> GetRequestByNumAsync(string requestNum) {
            return base.Channel.GetRequestByNumAsync(requestNum);
        }
    }
}
