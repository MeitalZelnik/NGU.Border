//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by NHibernate.
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

																					

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using NHibernate.UserTypes;
using Pangea.BaseStructures;
using Pangea.BasicValidators;
using System.Linq;


//
namespace NGU.Core
{

    public class CPersonDoc : ConstField    
    {
		private ConstField _ID = null;
		private ConstField _IdentityTypeID = null;
		private ConstField _IdentityNum = null;
		private ConstField _IdentityCountryID = null;
		private ConstField _NationalityID = null;
		private ConstField _IdentityCode = null;
		private ConstField _ExpirationDate = null;
		private ConstField _FirstName = null;
		private ConstField _MiddleName = null;
		private ConstField _LastName = null;
		private ConstField _GenderID = null;
		private ConstField _BirthDate = null;
		private ConstField _IsMainIdentifier = null;
		private ConstField _IsActiveRecord = null;
		private ConstField _CreateUserID = null;
		private ConstField _UpdateUserID = null;
		private ConstField _CreateDate = null;
		private ConstField _UpdateDate = null;
		private CRequest _Request = null;
		private CPerson _Person = null;


        public CPersonDoc()
        {
			_ID = new ConstField("ID");
			_IdentityTypeID = new ConstField("IdentityTypeID");
			_IdentityNum = new ConstField("IdentityNum");
			_IdentityCountryID = new ConstField("IdentityCountryID");
			_NationalityID = new ConstField("NationalityID");
			_IdentityCode = new ConstField("IdentityCode");
			_ExpirationDate = new ConstField("ExpirationDate");
			_FirstName = new ConstField("FirstName");
			_MiddleName = new ConstField("MiddleName");
			_LastName = new ConstField("LastName");
			_GenderID = new ConstField("GenderID");
			_BirthDate = new ConstField("BirthDate");
			_IsMainIdentifier = new ConstField("IsMainIdentifier");
			_IsActiveRecord = new ConstField("IsActiveRecord");
			_CreateUserID = new ConstField("CreateUserID");
			_UpdateUserID = new ConstField("UpdateUserID");
			_CreateDate = new ConstField("CreateDate");
			_UpdateDate = new ConstField("UpdateDate");
			_Request = new CRequest("Request");
			_Person = new CPerson("Person");
        }
        

        public CPersonDoc(string parent)
            : base(parent)
        {
			_ID = new ConstField("ID", parent);
			_IdentityTypeID = new ConstField("IdentityTypeID", parent);
			_IdentityNum = new ConstField("IdentityNum", parent);
			_IdentityCountryID = new ConstField("IdentityCountryID", parent);
			_NationalityID = new ConstField("NationalityID", parent);
			_IdentityCode = new ConstField("IdentityCode", parent);
			_ExpirationDate = new ConstField("ExpirationDate", parent);
			_FirstName = new ConstField("FirstName", parent);
			_MiddleName = new ConstField("MiddleName", parent);
			_LastName = new ConstField("LastName", parent);
			_GenderID = new ConstField("GenderID", parent);
			_BirthDate = new ConstField("BirthDate", parent);
			_IsMainIdentifier = new ConstField("IsMainIdentifier", parent);
			_IsActiveRecord = new ConstField("IsActiveRecord", parent);
			_CreateUserID = new ConstField("CreateUserID", parent);
			_UpdateUserID = new ConstField("UpdateUserID", parent);
			_CreateDate = new ConstField("CreateDate", parent);
			_UpdateDate = new ConstField("UpdateDate", parent);
			_Request = new CRequest("Request", parent);
			_Person = new CPerson("Person", parent);
        }

        public CPersonDoc(string value, string parent)
            : base(value, parent)
        {
			_ID = new ConstField("ID", FormatPath(value, parent));
			_IdentityTypeID = new ConstField("IdentityTypeID", FormatPath(value, parent));
			_IdentityNum = new ConstField("IdentityNum", FormatPath(value, parent));
			_IdentityCountryID = new ConstField("IdentityCountryID", FormatPath(value, parent));
			_NationalityID = new ConstField("NationalityID", FormatPath(value, parent));
			_IdentityCode = new ConstField("IdentityCode", FormatPath(value, parent));
			_ExpirationDate = new ConstField("ExpirationDate", FormatPath(value, parent));
			_FirstName = new ConstField("FirstName", FormatPath(value, parent));
			_MiddleName = new ConstField("MiddleName", FormatPath(value, parent));
			_LastName = new ConstField("LastName", FormatPath(value, parent));
			_GenderID = new ConstField("GenderID", FormatPath(value, parent));
			_BirthDate = new ConstField("BirthDate", FormatPath(value, parent));
			_IsMainIdentifier = new ConstField("IsMainIdentifier", FormatPath(value, parent));
			_IsActiveRecord = new ConstField("IsActiveRecord", FormatPath(value, parent));
			_CreateUserID = new ConstField("CreateUserID", FormatPath(value, parent));
			_UpdateUserID = new ConstField("UpdateUserID", FormatPath(value, parent));
			_CreateDate = new ConstField("CreateDate", FormatPath(value, parent));
			_UpdateDate = new ConstField("UpdateDate", FormatPath(value, parent));
			_Request = new CRequest("Request", FormatPath(value, parent));
			_Person = new CPerson("Person", FormatPath(value, parent));
        }
        
		public ConstField ID
        {
            get
            {
                return this._ID;
            }
        }
		public ConstField IdentityTypeID
        {
            get
            {
                return this._IdentityTypeID;
            }
        }
		public ConstField IdentityNum
        {
            get
            {
                return this._IdentityNum;
            }
        }
		public ConstField IdentityCountryID
        {
            get
            {
                return this._IdentityCountryID;
            }
        }
		public ConstField NationalityID
        {
            get
            {
                return this._NationalityID;
            }
        }
		public ConstField IdentityCode
        {
            get
            {
                return this._IdentityCode;
            }
        }
		public ConstField ExpirationDate
        {
            get
            {
                return this._ExpirationDate;
            }
        }
		public ConstField FirstName
        {
            get
            {
                return this._FirstName;
            }
        }
		public ConstField MiddleName
        {
            get
            {
                return this._MiddleName;
            }
        }
		public ConstField LastName
        {
            get
            {
                return this._LastName;
            }
        }
		public ConstField GenderID
        {
            get
            {
                return this._GenderID;
            }
        }
		public ConstField BirthDate
        {
            get
            {
                return this._BirthDate;
            }
        }
		public ConstField IsMainIdentifier
        {
            get
            {
                return this._IsMainIdentifier;
            }
        }
		public ConstField IsActiveRecord
        {
            get
            {
                return this._IsActiveRecord;
            }
        }
		public ConstField CreateUserID
        {
            get
            {
                return this._CreateUserID;
            }
        }
		public ConstField UpdateUserID
        {
            get
            {
                return this._UpdateUserID;
            }
        }
		public ConstField CreateDate
        {
            get
            {
                return this._CreateDate;
            }
        }
		public ConstField UpdateDate
        {
            get
            {
                return this._UpdateDate;
            }
        }
		public CRequest Request
        {
            get
            {
                return this._Request;
            }
        }
		public CPerson Person
        {
            get
            {
                return this._Person;
            }
        }

    }


	/// <summary>
	/// POCO for PersonDoc. This class is autogenerated
	/// </summary>

	
	
	[Serializable]
	public partial  class PersonDoc :  ObjectValidationBase  	{
		#region Consts
		
		private static CPersonDoc props = null;

		
		public static CPersonDoc Props
        {
            get
            {
				if (props == null)
				{
					props = new CPersonDoc();
				}
                return props;
            }
        }

		#endregion
		
		#region Fields
		

		private Int64 iD;

		private Int64 identityTypeID;
	
		private String identityNum;
	
		private Int64 identityCountryID;
	
		private Int64? nationalityID;

		private String identityCode;
	
			private DateTime? expirationDate;

		private String firstName;
	
		private String middleName;
	
		private String lastName;
	
		private Int64? genderID;

			private DateTime? birthDate;

		private Boolean isMainIdentifier;
	
		private Boolean isActiveRecord;
	
		private Int64 createUserID;
	
		private Int64 updateUserID;
	
			private DateTime? createDate;

			private DateTime? updateDate;

		private Request request;
	
		private Person person;
	
		#endregion

		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the PersonDoc class
		/// </summary>
		public PersonDoc()
		{
		}
	
		#endregion
	
		#region Properties
		
		/// <summary>
		/// Gets or sets the ID for the current PersonDoc
		/// </summary>
		
	
	
[DataMember]
			public  virtual   Int64 ID
		{
			get 
			{ 
				return this.iD; 
			}
			set 
			{
				this.iD = value;
				NotifyPropertyChanged("ID");
			}
		}
/*
*/

		/// <summary>
		/// Gets or sets the IdentityTypeID for the current PersonDoc
		/// </summary>
		
	
	
[DataMember]
  		public  virtual  Int64 IdentityTypeID
  		{
			get 
			{ 
				return this.identityTypeID; 
			}
			set 
			{
				this.identityTypeID = value;
				NotifyPropertyChanged("IdentityTypeID");
			}
		}
/*
*/

		/// <summary>
		/// Gets or sets the IdentityNum for the current PersonDoc
		/// </summary>
		
	
	
[DataMember]
  		public  virtual  String IdentityNum
  		{
			get 
			{ 
				return this.identityNum; 
			}
			set 
			{
				this.identityNum = value;
				NotifyPropertyChanged("IdentityNum");
			}
		}
/*
*/

		/// <summary>
		/// Gets or sets the IdentityCountryID for the current PersonDoc
		/// </summary>
		
	
	
[DataMember]
  		public  virtual  Int64 IdentityCountryID
  		{
			get 
			{ 
				return this.identityCountryID; 
			}
			set 
			{
				this.identityCountryID = value;
				NotifyPropertyChanged("IdentityCountryID");
			}
		}
/*
*/

		/// <summary>
		/// Gets or sets the NationalityID for the current PersonDoc
		/// </summary>
		
	
	
[DataMember]
			public  virtual   Int64? NationalityID
		{
			get 
			{ 
				return this.nationalityID; 
			}
			set 
			{
				this.nationalityID = value;
				NotifyPropertyChanged("NationalityID");
			}
		}
/*
*/

		/// <summary>
		/// Gets or sets the IdentityCode for the current PersonDoc
		/// </summary>
		
	
	
[DataMember]
  		public  virtual  String IdentityCode
  		{
			get 
			{ 
				return this.identityCode; 
			}
			set 
			{
				this.identityCode = value;
				NotifyPropertyChanged("IdentityCode");
			}
		}
/*
*/

		/// <summary>
		/// Gets or sets the ExpirationDate for the current PersonDoc
		/// </summary>
		
	
	
[DataMember]
		public virtual DateTime? ExpirationDate
		{
			get 
			{ 
				return this.expirationDate; 
			}
			set 
			{
				this.expirationDate = value;
				NotifyPropertyChanged("ExpirationDate");
			}
		}
/*
*/

		/// <summary>
		/// Gets or sets the FirstName for the current PersonDoc
		/// </summary>
		
	
	
[DataMember]
  		public  virtual  String FirstName
  		{
			get 
			{ 
				return this.firstName; 
			}
			set 
			{
				this.firstName = value;
				NotifyPropertyChanged("FirstName");
			}
		}
/*
*/

		/// <summary>
		/// Gets or sets the MiddleName for the current PersonDoc
		/// </summary>
		
	
	
[DataMember]
  		public  virtual  String MiddleName
  		{
			get 
			{ 
				return this.middleName; 
			}
			set 
			{
				this.middleName = value;
				NotifyPropertyChanged("MiddleName");
			}
		}
/*
*/

		/// <summary>
		/// Gets or sets the LastName for the current PersonDoc
		/// </summary>
		
	
	
[DataMember]
  		public  virtual  String LastName
  		{
			get 
			{ 
				return this.lastName; 
			}
			set 
			{
				this.lastName = value;
				NotifyPropertyChanged("LastName");
			}
		}
/*
*/

		/// <summary>
		/// Gets or sets the GenderID for the current PersonDoc
		/// </summary>
		
	
	
[DataMember]
			public  virtual   Int64? GenderID
		{
			get 
			{ 
				return this.genderID; 
			}
			set 
			{
				this.genderID = value;
				NotifyPropertyChanged("GenderID");
			}
		}
/*
*/

		/// <summary>
		/// Gets or sets the BirthDate for the current PersonDoc
		/// </summary>
		
	
	
[DataMember]
		public virtual DateTime? BirthDate
		{
			get 
			{ 
				return this.birthDate; 
			}
			set 
			{
				this.birthDate = value;
				NotifyPropertyChanged("BirthDate");
			}
		}
/*
*/

		/// <summary>
		/// Gets or sets the IsMainIdentifier for the current PersonDoc
		/// </summary>
		
	
	
[DataMember]
  		public  virtual  Boolean IsMainIdentifier
  		{
			get 
			{ 
				return this.isMainIdentifier; 
			}
			set 
			{
				this.isMainIdentifier = value;
				NotifyPropertyChanged("IsMainIdentifier");
			}
		}
/*
*/

		/// <summary>
		/// Gets or sets the IsActiveRecord for the current PersonDoc
		/// </summary>
		
	
	
[DataMember]
  		public  virtual  Boolean IsActiveRecord
  		{
			get 
			{ 
				return this.isActiveRecord; 
			}
			set 
			{
				this.isActiveRecord = value;
				NotifyPropertyChanged("IsActiveRecord");
			}
		}
/*
*/

		/// <summary>
		/// Gets or sets the CreateUserID for the current PersonDoc
		/// </summary>
		
	
	
[DataMember]
  		public  virtual  Int64 CreateUserID
  		{
			get 
			{ 
				return this.createUserID; 
			}
			set 
			{
				this.createUserID = value;
				NotifyPropertyChanged("CreateUserID");
			}
		}
/*
*/

		/// <summary>
		/// Gets or sets the UpdateUserID for the current PersonDoc
		/// </summary>
		
	
	
[DataMember]
  		public  virtual  Int64 UpdateUserID
  		{
			get 
			{ 
				return this.updateUserID; 
			}
			set 
			{
				this.updateUserID = value;
				NotifyPropertyChanged("UpdateUserID");
			}
		}
/*
*/

		/// <summary>
		/// Gets or sets the CreateDate for the current PersonDoc
		/// </summary>
		
	
	
[DataMember]
		public virtual DateTime? CreateDate
		{
			get 
			{ 
				return this.createDate; 
			}
			set 
			{
				this.createDate = value;
				NotifyPropertyChanged("CreateDate");
			}
		}
/*
*/

		/// <summary>
		/// Gets or sets the UpdateDate for the current PersonDoc
		/// </summary>
		
	
	
[DataMember]
		public virtual DateTime? UpdateDate
		{
			get 
			{ 
				return this.updateDate; 
			}
			set 
			{
				this.updateDate = value;
				NotifyPropertyChanged("UpdateDate");
			}
		}
/*
*/

		/// <summary>
		/// Gets or sets the Request for the current PersonDoc
		/// </summary>
		
	
	
[DataMember]
  		public  virtual  Request Request
  		{
			get 
			{ 
				return this.request; 
			}
			set 
			{
				this.request = value;
				NotifyPropertyChanged("Request");
			}
		}
/*
*/

		/// <summary>
		/// Gets or sets the Person for the current PersonDoc
		/// </summary>
		
	
	
[DataMember]
  		public  virtual  Person Person
  		{
			get 
			{ 
				return this.person; 
			}
			set 
			{
				this.person = value;
				NotifyPropertyChanged("Person");
			}
		}
/*
*/



		#endregion
		
		#region Equals override
			
		public override bool Equals(object obj)
		{
			if(obj == null)
				return false;
				
            var pi = obj.GetType().GetProperty("ID");
            
            if(pi == null)
            {
				return false;
            }
            
            var val = pi.GetValue(obj, null);
            if(val != null)
            {
				return val.Equals(ID);
			}
			else
			{
				#pragma warning disable CS0472 // Generated
				if(ID == null)
				#pragma warning restore CS0472 // Generated
					return true;
				else
					return false;
			}
		}	

		public override int GetHashCode()
        {
            return base.GetHashCode();
        }
		
	#endregion

	}	
}