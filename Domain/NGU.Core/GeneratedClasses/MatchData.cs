//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by NHibernate.
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

												

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using NHibernate.UserTypes;
using Pangea.BaseStructures;
using Pangea.BasicValidators;
using System.Linq;


//
namespace NGU.Core
{

    public class CMatchData : ConstField    
    {
		private ConstField _ID = null;
		private ConstField _ScoreFP = null;
		private ConstField _ScoreFace = null;
		private ConstField _ScoreIris = null;
		private ConstField _ScoreFusion = null;
		private ConstField _CreateUserID = null;
		private ConstField _UpdateUserID = null;
		private ConstField _CreateDate = null;
		private ConstField _UpdateDate = null;
		private CRequest _Request = null;
		private CPerson _Person = null;


        public CMatchData()
        {
			_ID = new ConstField("ID");
			_ScoreFP = new ConstField("ScoreFP");
			_ScoreFace = new ConstField("ScoreFace");
			_ScoreIris = new ConstField("ScoreIris");
			_ScoreFusion = new ConstField("ScoreFusion");
			_CreateUserID = new ConstField("CreateUserID");
			_UpdateUserID = new ConstField("UpdateUserID");
			_CreateDate = new ConstField("CreateDate");
			_UpdateDate = new ConstField("UpdateDate");
			_Request = new CRequest("Request");
			_Person = new CPerson("Person");
        }
        

        public CMatchData(string parent)
            : base(parent)
        {
			_ID = new ConstField("ID", parent);
			_ScoreFP = new ConstField("ScoreFP", parent);
			_ScoreFace = new ConstField("ScoreFace", parent);
			_ScoreIris = new ConstField("ScoreIris", parent);
			_ScoreFusion = new ConstField("ScoreFusion", parent);
			_CreateUserID = new ConstField("CreateUserID", parent);
			_UpdateUserID = new ConstField("UpdateUserID", parent);
			_CreateDate = new ConstField("CreateDate", parent);
			_UpdateDate = new ConstField("UpdateDate", parent);
			_Request = new CRequest("Request", parent);
			_Person = new CPerson("Person", parent);
        }

        public CMatchData(string value, string parent)
            : base(value, parent)
        {
			_ID = new ConstField("ID", FormatPath(value, parent));
			_ScoreFP = new ConstField("ScoreFP", FormatPath(value, parent));
			_ScoreFace = new ConstField("ScoreFace", FormatPath(value, parent));
			_ScoreIris = new ConstField("ScoreIris", FormatPath(value, parent));
			_ScoreFusion = new ConstField("ScoreFusion", FormatPath(value, parent));
			_CreateUserID = new ConstField("CreateUserID", FormatPath(value, parent));
			_UpdateUserID = new ConstField("UpdateUserID", FormatPath(value, parent));
			_CreateDate = new ConstField("CreateDate", FormatPath(value, parent));
			_UpdateDate = new ConstField("UpdateDate", FormatPath(value, parent));
			_Request = new CRequest("Request", FormatPath(value, parent));
			_Person = new CPerson("Person", FormatPath(value, parent));
        }
        
		public ConstField ID
        {
            get
            {
                return this._ID;
            }
        }
		public ConstField ScoreFP
        {
            get
            {
                return this._ScoreFP;
            }
        }
		public ConstField ScoreFace
        {
            get
            {
                return this._ScoreFace;
            }
        }
		public ConstField ScoreIris
        {
            get
            {
                return this._ScoreIris;
            }
        }
		public ConstField ScoreFusion
        {
            get
            {
                return this._ScoreFusion;
            }
        }
		public ConstField CreateUserID
        {
            get
            {
                return this._CreateUserID;
            }
        }
		public ConstField UpdateUserID
        {
            get
            {
                return this._UpdateUserID;
            }
        }
		public ConstField CreateDate
        {
            get
            {
                return this._CreateDate;
            }
        }
		public ConstField UpdateDate
        {
            get
            {
                return this._UpdateDate;
            }
        }
		public CRequest Request
        {
            get
            {
                return this._Request;
            }
        }
		public CPerson Person
        {
            get
            {
                return this._Person;
            }
        }

    }


	/// <summary>
	/// POCO for MatchData. This class is autogenerated
	/// </summary>

	
	
	[Serializable]
	public partial  class MatchData :  ObjectValidationBase  	{
		#region Consts
		
		private static CMatchData props = null;

		
		public static CMatchData Props
        {
            get
            {
				if (props == null)
				{
					props = new CMatchData();
				}
                return props;
            }
        }

		#endregion
		
		#region Fields
		

		private Int32 iD;

		private Int32 scoreFP;
	
		private Int32 scoreFace;
	
		private Int32 scoreIris;
	
		private Int32 scoreFusion;
	
		private Int32 createUserID;
	
		private Int32 updateUserID;
	
			private DateTime? createDate;

			private DateTime? updateDate;

		private Request request;
	
		private Person person;
	
		#endregion

		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the MatchData class
		/// </summary>
		public MatchData()
		{
		}
	
		#endregion
	
		#region Properties
		
		/// <summary>
		/// Gets or sets the ID for the current MatchData
		/// </summary>
		
	
	
[DataMember]
			public  virtual   Int32 ID
		{
			get 
			{ 
				return this.iD; 
			}
			set 
			{
				this.iD = value;
				NotifyPropertyChanged("ID");
			}
		}
/*
*/

		/// <summary>
		/// Gets or sets the ScoreFP for the current MatchData
		/// </summary>
		
	
	
[DataMember]
  		public  virtual  Int32 ScoreFP
  		{
			get 
			{ 
				return this.scoreFP; 
			}
			set 
			{
				this.scoreFP = value;
				NotifyPropertyChanged("ScoreFP");
			}
		}
/*
*/

		/// <summary>
		/// Gets or sets the ScoreFace for the current MatchData
		/// </summary>
		
	
	
[DataMember]
  		public  virtual  Int32 ScoreFace
  		{
			get 
			{ 
				return this.scoreFace; 
			}
			set 
			{
				this.scoreFace = value;
				NotifyPropertyChanged("ScoreFace");
			}
		}
/*
*/

		/// <summary>
		/// Gets or sets the ScoreIris for the current MatchData
		/// </summary>
		
	
	
[DataMember]
  		public  virtual  Int32 ScoreIris
  		{
			get 
			{ 
				return this.scoreIris; 
			}
			set 
			{
				this.scoreIris = value;
				NotifyPropertyChanged("ScoreIris");
			}
		}
/*
*/

		/// <summary>
		/// Gets or sets the ScoreFusion for the current MatchData
		/// </summary>
		
	
	
[DataMember]
  		public  virtual  Int32 ScoreFusion
  		{
			get 
			{ 
				return this.scoreFusion; 
			}
			set 
			{
				this.scoreFusion = value;
				NotifyPropertyChanged("ScoreFusion");
			}
		}
/*
*/

		/// <summary>
		/// Gets or sets the CreateUserID for the current MatchData
		/// </summary>
		
	
	
[DataMember]
  		public  virtual  Int32 CreateUserID
  		{
			get 
			{ 
				return this.createUserID; 
			}
			set 
			{
				this.createUserID = value;
				NotifyPropertyChanged("CreateUserID");
			}
		}
/*
*/

		/// <summary>
		/// Gets or sets the UpdateUserID for the current MatchData
		/// </summary>
		
	
	
[DataMember]
  		public  virtual  Int32 UpdateUserID
  		{
			get 
			{ 
				return this.updateUserID; 
			}
			set 
			{
				this.updateUserID = value;
				NotifyPropertyChanged("UpdateUserID");
			}
		}
/*
*/

		/// <summary>
		/// Gets or sets the CreateDate for the current MatchData
		/// </summary>
		
	
	
[DataMember]
		public virtual DateTime? CreateDate
		{
			get 
			{ 
				return this.createDate; 
			}
			set 
			{
				this.createDate = value;
				NotifyPropertyChanged("CreateDate");
			}
		}
/*
*/

		/// <summary>
		/// Gets or sets the UpdateDate for the current MatchData
		/// </summary>
		
	
	
[DataMember]
		public virtual DateTime? UpdateDate
		{
			get 
			{ 
				return this.updateDate; 
			}
			set 
			{
				this.updateDate = value;
				NotifyPropertyChanged("UpdateDate");
			}
		}
/*
*/

		/// <summary>
		/// Gets or sets the Request for the current MatchData
		/// </summary>
		
	
	
[DataMember]
  		public  virtual  Request Request
  		{
			get 
			{ 
				return this.request; 
			}
			set 
			{
				this.request = value;
				NotifyPropertyChanged("Request");
			}
		}
/*
*/

		/// <summary>
		/// Gets or sets the Person for the current MatchData
		/// </summary>
		
	
	
[DataMember]
  		public  virtual  Person Person
  		{
			get 
			{ 
				return this.person; 
			}
			set 
			{
				this.person = value;
				NotifyPropertyChanged("Person");
			}
		}
/*
*/



		#endregion
		
		#region Equals override
			
		public override bool Equals(object obj)
		{
			if(obj == null)
				return false;
				
            var pi = obj.GetType().GetProperty("ID");
            
            if(pi == null)
            {
				return false;
            }
            
            var val = pi.GetValue(obj, null);
            if(val != null)
            {
				return val.Equals(ID);
			}
			else
			{
				#pragma warning disable CS0472 // Generated
				if(ID == null)
				#pragma warning restore CS0472 // Generated
					return true;
				else
					return false;
			}
		}	

		public override int GetHashCode()
        {
            return base.GetHashCode();
        }
		
	#endregion

	}	
}